{
  "info": {
    "version": "1.0",
    "title": "DB Service application"
  },
  "host": "localhost:4000",
  "definitions": {
    "StudentExamRecord": {
      "description": "A record of a student's exam details",
      "example": {
        "exam_id": 456,
        "id": 1,
        "marks": 90,
        "student_id": 123
      },
      "properties": {
        "exam_id": {
          "description": "Exam ID",
          "type": "integer"
        },
        "id": {
          "description": "Record ID",
          "type": "integer"
        },
        "marks": {
          "description": "Marks obtained",
          "type": "integer"
        },
        "student_id": {
          "description": "Student ID",
          "type": "integer"
        }
      },
      "required": [
        "marks",
        "exam_id",
        "student_id",
        "id"
      ],
      "title": "Student Exam Record",
      "type": "object"
    },
    "Statuses": {
      "description": "All the statuses",
      "items": {
        "$ref": "#/definitions/Status"
      },
      "title": "Statuses",
      "type": "array"
    },
    "Topic": {
      "description": "A topic in the application",
      "example": {
        "code": "9C01.1",
        "grade_id": 1,
        "name": "What is Matter?",
        "subject_id": 1,
        "tag_id": 3
      },
      "properties": {
        "chapter_id": {
          "description": "Chapter id associated with the topic",
          "type": "integer"
        },
        "code": {
          "description": "Topic Code",
          "type": "string"
        },
        "grade_id": {
          "description": "Grade id associated with the topic",
          "type": "integer"
        },
        "name": {
          "description": "Topic name",
          "type": "string"
        },
        "tag_id": {
          "description": "Tag id associated with the topic",
          "type": "integer"
        }
      },
      "title": "Topic",
      "type": "object"
    },
    "Exam": {
      "description": "An exam in application",
      "example": {
        "date": "2024-02-02T11:30:00Z",
        "name": "NEET",
        "registration_deadline": "2023-12-31T11:30:00Z"
      },
      "properties": {
        "date": {
          "description": "Date of the exam",
          "type": "timestamp"
        },
        "name": {
          "description": "The name of an exam",
          "type": "string"
        },
        "registration_deadline": {
          "description": "Deadline for registration of exam",
          "type": "timestamp"
        }
      },
      "title": "Exam",
      "type": "object"
    },
    "Chapter": {
      "description": "A chapter in the application",
      "example": {
        "code": "9C01",
        "curriculum_id": 1,
        "grade_id": 1,
        "name": "हमारे आस-पास के पदार्थ | Matter in Our Surroundings",
        "subject_id": 1,
        "tag_id": 4
      },
      "properties": {
        "code": {
          "description": "Chapter Code",
          "type": "string"
        },
        "curriculum_id": {
          "description": "Curriculum id associated with the chapter",
          "type": "integer"
        },
        "grade_id": {
          "description": "Grade id associated with the chapter",
          "type": "integer"
        },
        "name": {
          "description": "Chapter name",
          "type": "string"
        },
        "subject_id": {
          "description": "Subject id associated with the chapter",
          "type": "integer"
        },
        "tag_id": {
          "description": "Tag id associated with the chapter",
          "type": "integer"
        }
      },
      "title": "Chapter",
      "type": "object"
    },
    "Users": {
      "description": "All users in the application",
      "items": {
        "$ref": "#/definitions/User"
      },
      "title": "Users",
      "type": "array"
    },
    "Curriculum": {
      "description": "A curriculum in the application",
      "example": {
        "code": "S-10",
        "name": "Sankalp",
        "tag_id": 1
      },
      "properties": {
        "code": {
          "description": "Code of the curriculum",
          "type": "string"
        },
        "name": {
          "description": "Name of the curriculum",
          "type": "string"
        },
        "tag_id": {
          "description": "Tag id associated with the curriculum",
          "type": "integer"
        }
      },
      "title": "Curriculum",
      "type": "object"
    },
    "UserProfile": {
      "description": "A user's profile in the application",
      "example": {
        "current_batch": "Photon",
        "current_grade": "11",
        "current_program": "HaryanaStudents",
        "latest_session_accessed": "LiveClass_10",
        "logged_in_atleast_once": true,
        "user_id": 10
      },
      "properties": {
        "current_batch": {
          "description": "Current Batch",
          "type": "string"
        },
        "current_grade": {
          "description": "Current Grade",
          "type": "string"
        },
        "current_program": {
          "description": "Current Program",
          "type": "string"
        },
        "latest_session_accessed": {
          "description": "Name of the latest session accessed",
          "type": "string"
        },
        "logged_in_atleast_once": {
          "description": "Has user logged in atleast once?",
          "type": "boolean"
        },
        "user_id": {
          "description": "Corresponding user ID of the user",
          "type": "integer"
        }
      },
      "title": "User Profile",
      "type": "object"
    },
    "TeacherProfileWithUserProfile": {
      "description": "A teacher's profile with associated user profile",
      "example": {
        "avg_rating": 4.5,
        "program_manager": "John Doe",
        "school": "XYZ High School",
        "teacher_fk": 2,
        "teacher_id": "30",
        "user_profile": {
          "current_batch": "Photon",
          "current_grade": "11",
          "current_program": "HaryanaStudents",
          "latest_session_accessed": "LiveClass_10",
          "logged_in_atleast_once": false,
          "user_id": 2
        }
      },
      "properties": {
        "avg_rating": {
          "description": "Average rating of the teacher",
          "type": "decimal"
        },
        "program_manager": {
          "description": "Program manager for the teacher",
          "type": "string"
        },
        "school": {
          "description": "School where the teacher works",
          "type": "string"
        },
        "teacher_fk": {
          "description": "Teacher foreign key ID associated with the student's profile",
          "type": "integer"
        },
        "teacher_id": {
          "description": "Teacher ID associated with the teacher's profile",
          "type": "string"
        },
        "user_profile": {
          "description": "User Profile details associated with the teacher",
          "type": "map"
        }
      },
      "title": "TeacherProfile With UserProfile",
      "type": "object"
    },
    "Exams": {
      "description": "All the exams",
      "items": {
        "$ref": "#/definitions/Exam"
      },
      "title": "Exams",
      "type": "array"
    },
    "User": {
      "description": "A user in the application",
      "example": {
        "address": "Bandra Complex, Kurla Road",
        "city": "Mumbai",
        "date_of_birth": "2003-08-22",
        "district": "Mumbai",
        "email": "rahul.sharma@example.com",
        "full_name": "Rahul Sharma",
        "gender": "Male",
        "phone": "9998887777",
        "pincode": "400011",
        "role": "student",
        "state": "Maharashtra",
        "whatsapp_phone": "9998887777"
      },
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "date_of_birth": {
          "description": "Date of Birth",
          "type": "date"
        },
        "district": {
          "description": "District",
          "type": "string"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "full_name": {
          "description": "Full name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "type": "string"
        },
        "pincode": {
          "description": "Pin code",
          "type": "string"
        },
        "role": {
          "description": "User role",
          "type": "string"
        },
        "state": {
          "description": "State",
          "type": "string"
        },
        "whatsapp_phone": {
          "description": "Whatsapp phone",
          "type": "string"
        }
      },
      "title": "User",
      "type": "object"
    },
    "Curriculums": {
      "description": "All Curriculums in the application",
      "items": {
        "$ref": "#/definitions/Curriculum"
      },
      "title": "Curriculums",
      "type": "array"
    },
    "VerificationParams": {
      "description": "Parameters to verify against",
      "example": {
        "auth_group_id": 2,
        "date_of_birth": "2003-04-17"
      },
      "properties": {
        "auth_group_id": {
          "description": "Auth Group ID",
          "type": "integer"
        },
        "date_of_birth": {
          "description": "Date of Birth",
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "auth_group_id"
      ],
      "title": "Verification Parameters",
      "type": "object"
    },
    "Subject": {
      "description": "A subject in the application",
      "example": {
        "code": "P11",
        "name": "Physics"
      },
      "properties": {
        "code": {
          "description": "Subject Code",
          "type": "string"
        },
        "name": {
          "description": "Subject name",
          "type": "string"
        },
        "tag_id": {
          "description": "Tag id associated with the subject",
          "type": "integer"
        }
      },
      "title": "Subject",
      "type": "object"
    },
    "Concept": {
      "description": "A concept in the application",
      "example": {
        "name": "Coulomb's Law",
        "tag_id": 6,
        "topic_id": 5
      },
      "properties": {
        "name": {
          "description": "Concept name",
          "type": "string"
        },
        "tag_id": {
          "description": "Tag id associated with the concept",
          "type": "integer"
        },
        "topic_id": {
          "description": "Topic id associated with the concept",
          "type": "integer"
        }
      },
      "title": "Concept",
      "type": "object"
    },
    "SessionOccurrenceWithUser": {
      "description": "A single session occurrence with user details",
      "example": {
        "end_time": "2022-02-02T11:30:00Z",
        "session_id": 1,
        "start_time": "2022-02-02T11:00:00Z"
      },
      "properties": {
        "end_time": {
          "description": "Session occurrence finish time",
          "type": "timestamp"
        },
        "session_id": {
          "description": "Session ID",
          "type": "integer"
        },
        "start_time": {
          "description": "Session occurrence start time",
          "type": "timestamp"
        }
      },
      "title": "SessionOccurrenceWithUser",
      "type": "object"
    },
    "Products": {
      "description": "All the products",
      "items": {
        "$ref": "#/definitions/Product"
      },
      "title": "Products",
      "type": "array"
    },
    "Product": {
      "description": "A product in application",
      "example": {
        "code": "TP-Sync",
        "goal": "",
        "led_by": "AF",
        "mode": "Offline",
        "model": "Live Classes",
        "name": "TP-Sync",
        "tech_modules": "Live Classes, Quizzes",
        "type": "Test Prep"
      },
      "properties": {
        "code": {
          "description": "Product code",
          "type": "string"
        },
        "goal": {
          "description": "Goal of the product",
          "type": "string"
        },
        "led_by": {
          "description": "Who is leading the product",
          "type": "string"
        },
        "mode": {
          "description": "Mode of a product",
          "type": "string"
        },
        "model": {
          "description": "Product Model",
          "type": "string"
        },
        "name": {
          "description": "The name of a product",
          "type": "name"
        },
        "tech_modules": {
          "description": "Tech Modules being used in the product",
          "type": "string"
        },
        "type": {
          "description": "Product type",
          "type": "string"
        }
      },
      "title": "Product",
      "type": "object"
    },
    "Tag": {
      "description": "A tag in the application",
      "example": {
        "description": "Description of the tag",
        "name": "A tag for resource"
      },
      "properties": {
        "description": {
          "description": "Description of the tag",
          "type": "string"
        },
        "name": {
          "description": "Name of the tag",
          "type": "string"
        }
      },
      "title": "Tag",
      "type": "object"
    },
    "LearningObjective": {
      "description": "A learning objective in the application",
      "example": {
        "concept_id": 1,
        "tag_id": 6,
        "title": "Understanding fundamental concept of Electromagnetism"
      },
      "properties": {
        "concept_id": {
          "description": "Concept id associated with the learning objective",
          "type": "integer"
        },
        "tag_id": {
          "description": "Tag id associated with the learning objective",
          "type": "integer"
        },
        "title": {
          "description": "Title of the learning objective",
          "type": "string"
        }
      },
      "title": "LearningObjective",
      "type": "object"
    },
    "GroupUsers": {
      "description": "Relation between group and user",
      "example": {
        "group_id": 1,
        "program_date_of_joining": "2020/01/06",
        "program_manager_id": 1,
        "program_student_language": "English",
        "user_id": 1
      },
      "properties": {
        "group_id": {
          "description": "Id of a particular group",
          "type": "integer"
        },
        "program_date_of_joining": {
          "description": "Date of joining a program",
          "type": "utc_datetime"
        },
        "program_manager_id": {
          "description": "ID of a program manager",
          "type": "integer"
        },
        "program_student_language": {
          "description": "Language used in an enrolled program",
          "type": "string"
        },
        "user_id": {
          "description": "Id of a particular group",
          "type": "integer"
        }
      },
      "title": "Group User",
      "type": "object"
    },
    "LearningObjectives": {
      "description": "All learning objectives in the application",
      "items": {
        "$ref": "#/definitions/LearningObjective"
      },
      "title": "LearningObjectives",
      "type": "array"
    },
    "UserIds": {
      "example": {
        "user_ids": [
          1,
          2
        ]
      },
      "properties": {
        "user_ids": {
          "description": "List of user ids",
          "type": "array"
        }
      },
      "type": "object"
    },
    "Batches": {
      "description": "All the batches",
      "items": {
        "$ref": "#/definitions/Batch"
      },
      "title": "Batches",
      "type": "array"
    },
    "StudentProfiles": {
      "description": "All student profiles in the application",
      "items": {
        "$ref": "#/definitions/StudentProfile"
      },
      "title": "Student Profiles",
      "type": "array"
    },
    "Sources": {
      "description": "All sources in the application",
      "items": {
        "$ref": "#/definitions/Source"
      },
      "title": "Sources",
      "type": "array"
    },
    "StudentProfileSetup": {
      "description": "A student's profile being setup with user profile",
      "example": {
        "attendance_in_classes_current_year": [
          89.0,
          90.2,
          20.3,
          35.7,
          42.1,
          66.4,
          88.9,
          91.2,
          77.3,
          54.6,
          33.8,
          10.1
        ],
        "attendance_in_tests_current_year": [
          89.0,
          90.2,
          20.3,
          35.7,
          42.1,
          66.4,
          88.9,
          91.2,
          77.3,
          54.6,
          33.8,
          10.1
        ],
        "average_batch_score_in_latest_test": 88.5,
        "classes_activity_cohort": "Cohort A",
        "current_batch": "Batch A",
        "current_grade": "11",
        "current_program": "Science",
        "latest_session_accessed": "LiveClass_10",
        "logged_in_atleast_once": true,
        "max_batch_score_in_latest_test": 95,
        "performance_trend_in_fst": "Improving",
        "student_id": "120180101057",
        "tests_activity_cohort": "Cohort B",
        "tests_number_of_correct_questions": 75,
        "tests_number_of_skipped_questions": 15,
        "tests_number_of_wrong_questions": 10,
        "took_class_atleast_once": true,
        "took_test_atleast_once": true,
        "total_number_of_live_classes": 50,
        "total_number_of_tests": 20
      },
      "properties": {
        "attendance_in_classes_current_year": {
          "description": "Attendance in classes for each month this year",
          "type": "array"
        },
        "attendance_in_tests_current_year": {
          "description": "Attendance in tests for each month this year",
          "type": "array"
        },
        "average_batch_score_in_latest_test": {
          "description": "Average batch score in latest test",
          "type": "decimal"
        },
        "classes_activity_cohort": {
          "description": "Classes activity cohort",
          "type": "string"
        },
        "current_batch": {
          "description": "Current Batch",
          "type": "string"
        },
        "current_grade": {
          "description": "Current Grade",
          "type": "string"
        },
        "current_program": {
          "description": "Current Program",
          "type": "string"
        },
        "latest_session_accessed": {
          "description": "Name of the latest session accessed",
          "type": "string"
        },
        "logged_in_atleast_once": {
          "description": "Has user logged in atleast once?",
          "type": "boolean"
        },
        "max_batch_score_in_latest_test": {
          "description": "Max batch score in latest test",
          "type": "integer"
        },
        "performance_trend_in_fst": {
          "description": "Performance trend in FST",
          "type": "string"
        },
        "student_id": {
          "description": "Student ID",
          "type": "string"
        },
        "tests_activity_cohort": {
          "description": "Tests activity cohort",
          "type": "string"
        },
        "tests_number_of_correct_questions": {
          "description": "Total Number of correct questions in tests",
          "type": "integer"
        },
        "tests_number_of_skipped_questions": {
          "description": "Total Number of skipped questions in tests",
          "type": "integer"
        },
        "tests_number_of_wrong_questions": {
          "description": "Total Number of wrong questions in tests",
          "type": "integer"
        },
        "took_class_atleast_once": {
          "description": "Has the student participated in a class at least once",
          "type": "boolean"
        },
        "took_test_atleast_once": {
          "description": "Has the student taken a test at least once",
          "type": "boolean"
        },
        "total_number_of_live_classes": {
          "description": "Total number of live classes",
          "type": "integer"
        },
        "total_number_of_tests": {
          "description": "Total number of tests",
          "type": "integer"
        }
      },
      "title": "StudentProfile Setup",
      "type": "object"
    },
    "Teachers": {
      "description": "All teachers in the application",
      "items": {
        "$ref": "#/definitions/Teacher"
      },
      "title": "Teachers",
      "type": "array"
    },
    "AuthGroup": {
      "description": "An auth-group in the application",
      "example": {
        "input_schema": {},
        "locale": "hi",
        "locale_data": {
          "en": {
            "title": "Register for session"
          },
          "hi": {
            "title": "सत्र के लिए पंजीकरण करें"
          }
        },
        "name": "DelhiStudents"
      },
      "properties": {
        "input_schema": {
          "description": "Input schema",
          "type": "map"
        },
        "locale": {
          "description": "The configured locale for the auth-group",
          "type": "string"
        },
        "locale_data": {
          "description": "Meta data about locale settings for the auth-group",
          "type": "map"
        },
        "name": {
          "description": "Name of the auth group",
          "type": "string"
        }
      },
      "title": "AuthGroup",
      "type": "object"
    },
    "Program": {
      "description": "A program in application",
      "example": {
        "donor": "Infosys, MSDF, Sofina",
        "group_id": 1,
        "mode": "Offline",
        "model": "Live Classes",
        "name": "Delhi-Govt",
        "products_used": "",
        "start_date": "2020-02-03",
        "state": "Delhi",
        "sub_type": "AF-Led",
        "target_outreach": 1000,
        "type": "Test Prep"
      },
      "properties": {
        "donor": {
          "description": "Donor of a program",
          "type": "string"
        },
        "group_id": {
          "description": "ID of the group",
          "type": "integer"
        },
        "mode": {
          "description": "Mode of a program",
          "type": "string"
        },
        "model": {
          "description": "Program Model",
          "type": "string"
        },
        "name": {
          "description": "The name of a program",
          "type": "name"
        },
        "products_used": {
          "description": "Products used in a program",
          "type": "string"
        },
        "start_date": {
          "description": "Starting date of a program",
          "type": "date"
        },
        "sub_type": {
          "description": "Sub-type of a program",
          "type": "string"
        },
        "target_outreach": {
          "description": "Target outreach for a particular program",
          "type": "integer"
        },
        "type": {
          "description": "Type of a program",
          "type": "string"
        }
      },
      "title": "Program",
      "type": "object"
    },
    "Subjects": {
      "description": "All subjects in the application",
      "items": {
        "$ref": "#/definitions/Subject"
      },
      "title": "Subjects",
      "type": "array"
    },
    "Concepts": {
      "description": "All concepts in the application",
      "items": {
        "$ref": "#/definitions/Concept"
      },
      "title": "Concepts",
      "type": "array"
    },
    "Batch": {
      "description": "A batch in application",
      "example": {
        "batch_id": "DelhiStudents_11_Photon_Eng_23_001",
        "contact_hours_per_week": 48,
        "name": "Delhi-12-NEET",
        "parent_id": 1
      },
      "properties": {
        "batch_id": {
          "description": "The id of a batch",
          "type": "string"
        },
        "contact_hours_per_week": {
          "description": "Contact hours per week of a batch",
          "type": "integer"
        },
        "name": {
          "description": "The name of a batch",
          "type": "string"
        },
        "parent_id": {
          "description": "The id of a parent batch",
          "type": "string"
        }
      },
      "title": "Batch",
      "type": "object"
    },
    "Topics": {
      "description": "All topics in the application",
      "items": {
        "$ref": "#/definitions/Topic"
      },
      "title": "Topics",
      "type": "array"
    },
    "Grades": {
      "description": "All grades in the application",
      "items": {
        "$ref": "#/definitions/Grade"
      },
      "title": "Grades",
      "type": "array"
    },
    "StudentProfileWithUserProfile": {
      "description": "A student's profile with associated user profile",
      "example": {
        "attendance_in_classes_current_year": [
          89.0,
          90.2,
          20.3,
          35.7,
          42.1,
          66.4,
          88.9,
          91.2,
          77.3,
          54.6,
          33.8,
          10.1
        ],
        "attendance_in_tests_current_year": [
          89.0,
          90.2,
          20.3,
          35.7,
          42.1,
          66.4,
          88.9,
          91.2,
          77.3,
          54.6,
          33.8,
          10.1
        ],
        "average_batch_score_in_latest_test": 88.5,
        "classes_activity_cohort": "Cohort A",
        "max_batch_score_in_latest_test": 95,
        "performance_trend_in_fst": "Improving",
        "student_fk": 1,
        "student_id": "120180101057",
        "tests_activity_cohort": "Cohort B",
        "tests_number_of_correct_questions": 75,
        "tests_number_of_skipped_questions": 15,
        "tests_number_of_wrong_questions": 10,
        "took_class_atleast_once": true,
        "took_test_atleast_once": true,
        "total_number_of_live_classes": 50,
        "total_number_of_tests": 20,
        "user_profile": {
          "current_batch": "Batch A",
          "current_grade": "11",
          "current_program": "Science",
          "latest_session_accessed": "LiveClass_10",
          "logged_in_atleast_once": true,
          "user_id": 1
        }
      },
      "properties": {
        "attendance_in_classes_current_year": {
          "description": "Attendance in classes for each month this year",
          "type": "array"
        },
        "attendance_in_tests_current_year": {
          "description": "Attendance in tests for each month this year",
          "type": "array"
        },
        "average_batch_score_in_latest_test": {
          "description": "Average batch score in latest test",
          "type": "decimal"
        },
        "classes_activity_cohort": {
          "description": "Classes activity cohort",
          "type": "string"
        },
        "max_batch_score_in_latest_test": {
          "description": "Max batch score in latest test",
          "type": "integer"
        },
        "performance_trend_in_fst": {
          "description": "Performance trend in FST",
          "type": "string"
        },
        "student_fk": {
          "description": "Student foreign key ID associated with the student's profile",
          "type": "integer"
        },
        "student_id": {
          "description": "Student ID",
          "type": "string"
        },
        "tests_activity_cohort": {
          "description": "Tests activity cohort",
          "type": "string"
        },
        "tests_number_of_correct_questions": {
          "description": "Total Number of correct questions in tests",
          "type": "integer"
        },
        "tests_number_of_skipped_questions": {
          "description": "Total Number of skipped questions in tests",
          "type": "integer"
        },
        "tests_number_of_wrong_questions": {
          "description": "Total Number of wrong questions in tests",
          "type": "integer"
        },
        "took_class_atleast_once": {
          "description": "Has the student participated in a class at least once",
          "type": "boolean"
        },
        "took_test_atleast_once": {
          "description": "Has the student taken a test at least once",
          "type": "boolean"
        },
        "total_number_of_live_classes": {
          "description": "Total number of live classes",
          "type": "integer"
        },
        "total_number_of_tests": {
          "description": "Total number of tests",
          "type": "integer"
        },
        "user_profile": {
          "description": "User Profile details associated with the student",
          "type": "map"
        }
      },
      "title": "StudentProfile With UserProfile",
      "type": "object"
    },
    "StudentWithUser": {
      "description": "A student in the application along with user info",
      "example": {
        "category": "general",
        "father_name": "Narayan Pandey",
        "father_phone": "8989898989",
        "mother_name": "Lakshmi Pandey",
        "mother_phone": "9998887777",
        "stream": "PCB",
        "student_id": "120180101057",
        "user": {
          "address": "Bandra Complex, Kurla Road",
          "city": "Mumbai",
          "district": "Mumbai",
          "email": "rahul.sharma@example.com",
          "first_name": "Rahul",
          "gender": "Male",
          "last_name": "Sharma",
          "phone": "9998887777",
          "pincode": "400011",
          "role": "student",
          "state": "Maharashtra"
        }
      },
      "properties": {
        "category": {
          "description": "Category",
          "type": "string"
        },
        "father_name": {
          "description": "Father's name",
          "type": "string"
        },
        "father_phone": {
          "description": "Father's phone number",
          "type": "string"
        },
        "mother_name": {
          "description": "Mother's name",
          "type": "string"
        },
        "mother_phone": {
          "description": "Mother's phone number",
          "type": "string"
        },
        "stream": {
          "description": "Stream",
          "type": "string"
        },
        "student_id": {
          "description": "Id for the student",
          "type": "string"
        },
        "user": {
          "description": "User details associated with the student",
          "type": "map"
        }
      },
      "title": "Student with User",
      "type": "object"
    },
    "EnrollmentRecords": {
      "description": "All enrollment records",
      "items": {
        "$ref": "#/definitions/EnrollmentRecord"
      },
      "title": "EnrollmentRecords",
      "type": "array"
    },
    "SessionOccurrence": {
      "description": "A session occurrence for a session",
      "example": {
        "end_time": "2022-02-02T11:30:00Z",
        "session_fk": 1,
        "session_id": "DelhiStudents_B01_44725_unv-nkyh-hnb",
        "start_time": "2022-02-02T11:00:00Z"
      },
      "properties": {
        "end_time": {
          "description": "Session occurrence finish time",
          "type": "timestamp"
        },
        "inserted_at": {
          "description": "Timestamp when the record was created",
          "type": "timestamp"
        },
        "session_fk": {
          "description": "The primary key for session's table",
          "type": "integer"
        },
        "session_id": {
          "description": "ID of the session",
          "type": "string"
        },
        "start_time": {
          "description": "Session occurrence start time",
          "type": "timestamp"
        },
        "updated_at": {
          "description": "Timestamp when the record was last updated",
          "type": "timestamp"
        }
      },
      "title": "SessionOccurrence",
      "type": "object"
    },
    "Programs": {
      "description": "All the programs",
      "items": {
        "$ref": "#/definitions/Program"
      },
      "title": "Programs",
      "type": "array"
    },
    "FormSchemas": {
      "description": "All the form schemas",
      "items": {
        "$ref": "#/definitions/FormSchema"
      },
      "title": "FormSchemas",
      "type": "array"
    },
    "StudentExamRecords": {
      "description": "A collection of student exam records",
      "items": {
        "$ref": "#/definitions/StudentExamRecord"
      },
      "title": "List of Student Exam Records",
      "type": "array"
    },
    "Grade": {
      "description": "A grade in the application",
      "example": {
        "number": 12,
        "tag_id": 1
      },
      "properties": {
        "number": {
          "description": "Grade in school",
          "type": "integer"
        },
        "tag_id": {
          "description": "Tag id associated with the grade",
          "type": "integer"
        }
      },
      "title": "Grade",
      "type": "object"
    },
    "School": {
      "description": "A school in the application",
      "example": {
        "block_code": "DOEAIDED",
        "board": "CBSE",
        "board_medium": "en",
        "category": "Government",
        "code": "872931",
        "district": "NORTH WEST DELHI",
        "district_code": "0701",
        "name": "Kendriya Vidyalaya - Rajori Garden",
        "region": "Urban",
        "state": "Delhi",
        "state_code": "DL",
        "type": "Open",
        "udise_code": "05040120901",
        "user_id": 1
      },
      "properties": {
        "block_code": {
          "description": "Block Code",
          "type": "string"
        },
        "block_name": {
          "description": "Block Name",
          "type": "string"
        },
        "board": {
          "description": "Board",
          "type": "string"
        },
        "board_medium": {
          "description": "Medium",
          "type": "string"
        },
        "category": {
          "description": "Category",
          "type": "string"
        },
        "code": {
          "description": "Code",
          "type": "string"
        },
        "district": {
          "description": "District",
          "type": "string"
        },
        "district_code": {
          "description": "District Code",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "region": {
          "description": "Region",
          "type": "string"
        },
        "state": {
          "description": "State",
          "type": "string"
        },
        "state_code": {
          "description": "State Code",
          "type": "string"
        },
        "type": {
          "description": "Type",
          "type": "string"
        },
        "udise_code": {
          "description": "Udise Code",
          "type": "string"
        },
        "user_id": {
          "description": "User ID of a school",
          "type": "integer"
        }
      },
      "title": "School",
      "type": "object"
    },
    "Group": {
      "description": "A Group in application",
      "example": {
        "child_id": {
          "donor": "YES",
          "group_id": 29,
          "id": 24,
          "mode": "Offline",
          "model": "Live Classes",
          "name": "Mrs. Stefanie Goldner",
          "product_used": "One",
          "start_date": "2016-11-18",
          "state": "UTTARAKHAND",
          "sub_type": "High",
          "target_outreach": 4743,
          "type": "Competitive"
        },
        "id": 54,
        "type": "program"
      },
      "properties": {
        "child_id": {
          "description": "The id of type",
          "type": "integer"
        },
        "type": {
          "description": "The type of a group",
          "type": "string"
        }
      },
      "title": "Group",
      "type": "object"
    },
    "StudentProfile": {
      "description": "A student's profile in the application",
      "example": {
        "attendance_in_classes_current_year": [
          89.0,
          90.2,
          20.3,
          35.7,
          42.1,
          66.4,
          88.9,
          91.2,
          77.3,
          54.6,
          33.8,
          10.1
        ],
        "attendance_in_tests_current_year": [
          89.0,
          90.2,
          20.3,
          35.7,
          42.1,
          66.4,
          88.9,
          91.2,
          77.3,
          54.6,
          33.8,
          10.1
        ],
        "average_batch_score_in_latest_test": 88.5,
        "classes_activity_cohort": "Cohort A",
        "max_batch_score_in_latest_test": 95,
        "performance_trend_in_fst": "Improving",
        "student_fk": 2,
        "student_id": "120180101057",
        "tests_activity_cohort": "Cohort B",
        "tests_number_of_correct_questions": 75,
        "tests_number_of_skipped_questions": 15,
        "tests_number_of_wrong_questions": 10,
        "took_class_atleast_once": true,
        "took_test_atleast_once": true,
        "total_number_of_live_classes": 50,
        "total_number_of_tests": 20,
        "user_profile_id": 3
      },
      "properties": {
        "attendance_in_classes_current_year": {
          "description": "Attendance in classes for each month this year",
          "type": "array"
        },
        "attendance_in_tests_current_year": {
          "description": "Attendance in tests for each month this year",
          "type": "array"
        },
        "average_batch_score_in_latest_test": {
          "description": "Average batch score in latest test",
          "type": "decimal"
        },
        "classes_activity_cohort": {
          "description": "Classes activity cohort",
          "type": "string"
        },
        "max_batch_score_in_latest_test": {
          "description": "Max batch score in latest test",
          "type": "integer"
        },
        "performance_trend_in_fst": {
          "description": "Performance trend in FST",
          "type": "string"
        },
        "student_fk": {
          "description": "Student foreign key ID associated with the student's profile",
          "type": "integer"
        },
        "student_id": {
          "description": "Student ID",
          "type": "string"
        },
        "tests_activity_cohort": {
          "description": "Tests activity cohort",
          "type": "string"
        },
        "tests_number_of_correct_questions": {
          "description": "Total Number of correct questions in tests",
          "type": "integer"
        },
        "tests_number_of_skipped_questions": {
          "description": "Total Number of skipped questions in tests",
          "type": "integer"
        },
        "tests_number_of_wrong_questions": {
          "description": "Total Number of wrong questions in tests",
          "type": "integer"
        },
        "took_class_atleast_once": {
          "description": "Has the student participated in a class at least once",
          "type": "boolean"
        },
        "took_test_atleast_once": {
          "description": "Has the student taken a test at least once",
          "type": "boolean"
        },
        "total_number_of_live_classes": {
          "description": "Total number of live classes",
          "type": "integer"
        },
        "total_number_of_tests": {
          "description": "Total number of tests",
          "type": "integer"
        },
        "user_profile_id": {
          "description": "User profile ID associated with the student's profile",
          "type": "integer"
        }
      },
      "title": "Student Profile",
      "type": "object"
    },
    "StudentIdGeneration": {
      "description": "Details required to generate a student ID",
      "example": {
        "category": "OBC",
        "date_of_birth": "2003-04-17",
        "first_name": "Rahul",
        "gender": "Male",
        "grade": 12,
        "region": "Bhopal",
        "school_name": "JNV Durg"
      },
      "properties": {
        "category": {
          "description": "Category",
          "type": "string"
        },
        "date_of_birth": {
          "description": "Date of birth",
          "format": "date",
          "type": "string"
        },
        "first_name": {
          "description": "First name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "grade": {
          "description": "Grade",
          "type": "integer"
        },
        "region": {
          "description": "Region",
          "type": "string"
        },
        "school_name": {
          "description": "School name",
          "type": "string"
        }
      },
      "required": [
        "school_name",
        "region",
        "grade",
        "category",
        "gender",
        "date_of_birth",
        "first_name"
      ],
      "title": "Student ID Generation",
      "type": "object"
    },
    "SchoolBatches": {
      "description": "Relation between school and batch",
      "example": {
        "batch_id": 1,
        "school_id": 1
      },
      "properties": {
        "batch_id": {
          "description": "Id of a particular batch",
          "type": "integer"
        },
        "school_id": {
          "description": "Id of a particular school",
          "type": "integer"
        }
      },
      "title": "School Batch",
      "type": "object"
    },
    "Students": {
      "description": "All students in the application",
      "items": {
        "$ref": "#/definitions/Student"
      },
      "title": "Students",
      "type": "array"
    },
    "AuthGroups": {
      "description": "All the auth-groups",
      "items": {
        "$ref": "#/definitions/AuthGroup"
      },
      "title": "AuthGroups",
      "type": "array"
    },
    "GroupSessions": {
      "description": "Relation between group and session",
      "example": {
        "group_id": 1,
        "session_id": 1
      },
      "properties": {
        "group_id": {
          "description": "Id of a particular group",
          "type": "integer"
        },
        "session_id": {
          "description": "Id of a particular group",
          "type": "integer"
        }
      },
      "title": "Group Session",
      "type": "object"
    },
    "Teacher": {
      "description": "A teacher in the application",
      "example": {
        "designation": "Vice Principal",
        "grade": "12",
        "is_af_teacher": true,
        "program_manager_id": 3,
        "school_id": 2,
        "subject": "Maths",
        "teacher_id": "3bc6b53e7bbbc883b9ab",
        "user_id": 1
      },
      "properties": {
        "designation": {
          "description": "Designation",
          "type": "string"
        },
        "grade": {
          "description": "Grade",
          "type": "string"
        },
        "is_af_teacher": {
          "description": "Indicates whether the teacher is an AF teacher or not",
          "type": "boolean"
        },
        "program_manager_id": {
          "description": "Program manager user ID for the teacher",
          "type": "integer"
        },
        "school_id": {
          "description": "School ID for the teacher",
          "type": "integer"
        },
        "subject": {
          "description": "Core subject",
          "type": "string"
        },
        "teacher_id": {
          "description": "ID for the teacher",
          "type": "string"
        },
        "user_id": {
          "description": "User ID for the teacher",
          "type": "integer"
        }
      },
      "title": "Teacher",
      "type": "object"
    },
    "SessionIds": {
      "example": {
        "session_ids": [
          1,
          2
        ]
      },
      "properties": {
        "session_ids": {
          "description": "List of session ids",
          "type": "array"
        }
      },
      "type": "object"
    },
    "TeacherProfile": {
      "description": "A teacher's profile in the application",
      "example": {
        "avg_rating": 4.5,
        "program_manager": "John Doe",
        "school": "XYZ High School",
        "teacher_fk": 3,
        "teacher_id": "20202",
        "user_profile_id": 1
      },
      "properties": {
        "avg_rating": {
          "description": "Average rating of the teacher",
          "type": "decimal"
        },
        "program_manager": {
          "description": "Program manager for the teacher",
          "type": "string"
        },
        "school": {
          "description": "School where the teacher works",
          "type": "string"
        },
        "teacher_fk": {
          "description": "Teacher foreign key ID associated with the teacher's profile",
          "type": "integer"
        },
        "teacher_id": {
          "description": "Teacher ID associated with the teacher's profile",
          "type": "string"
        },
        "user_profile_id": {
          "description": "User profile ID associated with the teacher's profile",
          "type": "integer"
        }
      },
      "title": "TeacherProfile",
      "type": "object"
    },
    "EnrollmentRecord": {
      "description": "An enrollment record for the student",
      "example": {
        "academic_year": "2022",
        "board_medium": "English",
        "date_of_enrollment": "02/03/2020",
        "group_id": 1,
        "group_type": "batch",
        "is_current": true,
        "student_id": 1
      },
      "properties": {
        "academic_year": {
          "description": "Academic Year",
          "type": "string"
        },
        "board_medium": {
          "description": "Medium of the board",
          "type": "string"
        },
        "date_of_enrollment": {
          "description": "Date of Enrollment",
          "type": "date"
        },
        "group_id": {
          "description": "ID of what group the student belongs to",
          "type": "integer"
        },
        "group_type": {
          "description": "What kind of group the grouping ID belongs to",
          "type": "string"
        },
        "is_current": {
          "description": "Is current enrollment record for student",
          "type": "boolean"
        },
        "student_id": {
          "description": "Student ID that the program enrollment belongs to",
          "type": "integer"
        }
      },
      "title": "EnrollmentRecord",
      "type": "object"
    },
    "GroupIds": {
      "example": {
        "group_ids": [
          1,
          2
        ]
      },
      "properties": {
        "group_ids": {
          "description": "List of group ids",
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormSchema": {
      "description": "A form schema in the application",
      "example": {
        "attributes": {
          "label": "First Name"
        },
        "name": "Registration"
      },
      "properties": {
        "attributes": {
          "description": "Attribute data for form schema",
          "type": "map"
        },
        "name": {
          "description": "Name of a form schema",
          "type": "string"
        }
      },
      "title": "FormSchema",
      "type": "object"
    },
    "Session": {
      "description": "A session in the application",
      "example": {
        "created_by_id": 1,
        "end_time": "2022-02-02T11:30:00Z",
        "is_active": true,
        "meta_data": {
          "substitute-teacher-name": "Ms. Poonam"
        },
        "name": "Kendriya Vidyalaya - Weekly Maths class 7",
        "owner_id": 2,
        "platform": "meet",
        "platform_link": "https://meet.google.com/asl-skas-qwe",
        "portal_link": "https://links.af.org/kv-wmc7",
        "repeat_schedule": {
          "repeat-till-date": "2022-12-31 11:59:59",
          "repeat-type": "weekly"
        },
        "session_id": "c714-e1d4-5a42-0f9f-36b3",
        "start_time": "2022-02-02T11:00:00Z"
      },
      "properties": {
        "activate_signup": {
          "description": "Is sign up allowed for this session",
          "type": "boolean"
        },
        "auth_type": {
          "description": "Authentication methods used for session",
          "type": "string"
        },
        "created_by_id": {
          "description": "User ID for the session creator",
          "type": "integer"
        },
        "end_time": {
          "description": "Session finish time",
          "type": "timestamp"
        },
        "id_generation": {
          "description": "Is ID being generated for this session",
          "type": "boolean"
        },
        "inserted_at": {
          "description": "Timestamp when the record was created",
          "type": "timestamp"
        },
        "is_active": {
          "description": "Tells whether session is active or not",
          "type": "boolean"
        },
        "meta_data": {
          "description": "Additional meta data for the session",
          "type": "map"
        },
        "name": {
          "description": "First name",
          "type": "string"
        },
        "number_of_fields_in_pop_form": {
          "description": "Number of fields in the pop form",
          "type": "integer"
        },
        "owner_id": {
          "description": "User ID for the session owner",
          "type": "integer"
        },
        "platform": {
          "description": "Platform where session being hosted",
          "type": "string"
        },
        "platform_link": {
          "description": "Link for the platform",
          "type": "string"
        },
        "pop_up_form": {
          "description": "Is the session showing a pop up form",
          "type": "boolean"
        },
        "portal_link": {
          "description": "Link generated by the portal",
          "type": "text"
        },
        "redirection": {
          "description": "Is the session redirecting to some other platform",
          "type": "boolean"
        },
        "repeat_schedule": {
          "description": "Repeat type and repeat till date for session",
          "type": "json"
        },
        "session_id": {
          "description": "Id for the session",
          "type": "string"
        },
        "start_time": {
          "description": "Session start time",
          "type": "timestamp"
        },
        "type": {
          "description": "Type of session",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp when the record was last updated",
          "type": "timestamp"
        }
      },
      "title": "Session",
      "type": "object"
    },
    "VerificationResult": {
      "description": "Result of the student verification",
      "example": {
        "is_verified": true
      },
      "properties": {
        "is_verified": {
          "description": "Verification status",
          "type": "boolean"
        }
      },
      "required": [
        "is_verified"
      ],
      "title": "Verification Result",
      "type": "object"
    },
    "Tags": {
      "description": "All tags in the application",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "title": "Tags",
      "type": "array"
    },
    "StudentIdGenerationResponse": {
      "description": "Response after generating a student ID",
      "example": {
        "student_id": "2410505647"
      },
      "properties": {
        "student_id": {
          "description": "Generated student ID",
          "type": "string"
        }
      },
      "required": [
        "student_id"
      ],
      "title": "Student ID Generation Response",
      "type": "object"
    },
    "TeacherProfiles": {
      "description": "All teacher profiles in the application",
      "items": {
        "$ref": "#/definitions/TeacherProfile"
      },
      "title": "Teacher Profiles",
      "type": "array"
    },
    "SessionOccurrences": {
      "description": "All the session occurrences ",
      "items": {
        "$ref": "#/definitions/SessionOccurrence"
      },
      "title": "SessionOccurrences",
      "type": "array"
    },
    "Purposes": {
      "description": "All purposes in the application",
      "items": {
        "$ref": "#/definitions/Purpose"
      },
      "title": "Purposes",
      "type": "array"
    },
    "TeacherWithUser": {
      "description": "A teacher in the application along with user info",
      "example": {
        "category": "general",
        "designation": "Principal",
        "grade": "High School",
        "school_id": 2,
        "stream": "PCB",
        "teacher_id": "AF419",
        "user": {
          "address": "Bandra Complex, Kurla Road",
          "city": "Mumbai",
          "district": "Mumbai",
          "email": "aman.bahuguna@example.com",
          "full_name": "Aman Bahuguna",
          "gender": "Male",
          "phone": "8484515848",
          "pincode": "400011",
          "role": "principal",
          "state": "Maharashtra"
        }
      },
      "properties": {
        "designation": {
          "description": "Designation for the teacher",
          "type": "string"
        },
        "grade": {
          "description": "Grade level in which a teacher instructs",
          "type": "string"
        },
        "subject": {
          "description": "Subject taught by the teacher",
          "type": "string"
        },
        "teacher_id": {
          "description": "ID of the teacher",
          "type": "string"
        },
        "user": {
          "description": "User details associated with the teacher",
          "type": "map"
        }
      },
      "title": "Teacher with User",
      "type": "object"
    },
    "Chapters": {
      "description": "All chapters in the application",
      "items": {
        "$ref": "#/definitions/Chapter"
      },
      "title": "Chapters",
      "type": "array"
    },
    "Groups": {
      "description": "All the Groups",
      "items": {
        "$ref": "#/definitions/Group"
      },
      "title": "Groups",
      "type": "array"
    },
    "Resource": {
      "description": "A resource in the application",
      "example": {
        "chapter_id": 1,
        "concept_id": 1,
        "curriculum_id": 1,
        "difficulty_level": "medium",
        "learning_objective_id": 1,
        "name": "1. 9C01 Introduction - हमारे आस पास के पदार्थ | Matter in our Surroundings",
        "purpose_id": 1,
        "tag_id": 5,
        "teacher_id": 1,
        "topic_id": 1,
        "type": "video",
        "type_params": {
          "duration": "45 minutes"
        }
      },
      "properties": {
        "chapter_id": {
          "description": "Chapter id associated with the resource",
          "type": "integer"
        },
        "concept_id": {
          "description": "Concept id associated with the resource",
          "type": "integer"
        },
        "curriculum_id": {
          "description": "Curriculum id associated with the resource",
          "type": "integer"
        },
        "difficulty_level": {
          "description": "Difficulty level of a resource",
          "type": "string"
        },
        "learning_objective_id": {
          "description": "Learning objective id associated with the resource",
          "type": "integer"
        },
        "name": {
          "description": "Resource name",
          "type": "string"
        },
        "purpose_id": {
          "description": "Purpose id associated with the resource",
          "type": "integer"
        },
        "tag_id": {
          "description": "Tag id associated with the resource",
          "type": "integer"
        },
        "teacher_id": {
          "description": "Teacher id associated with the resource",
          "type": "integer"
        },
        "topic_id": {
          "description": "Topic id associated with the resource",
          "type": "integer"
        },
        "type": {
          "description": "Resource type",
          "type": "string"
        },
        "type_params": {
          "description": "Parameters of the resource type",
          "type": "map"
        }
      },
      "title": "Resource",
      "type": "object"
    },
    "SessionSchedule": {
      "description": "Schedule of a session in the application",
      "example": {
        "batch_id": 1,
        "day_of_week": "Monday",
        "end_time": "11:30",
        "session_id": 1,
        "start_time": "11:00"
      },
      "properties": {
        "batch_id": {
          "description": "Batch id associated with the session schedule",
          "type": "integer"
        },
        "day_of_week": {
          "description": "Grade id associated with the topic",
          "type": "integer"
        },
        "end_time": {
          "description": "Session's end time",
          "type": "time"
        },
        "session_id": {
          "description": "Session id associated with the session schedule",
          "type": "integer"
        },
        "start_time": {
          "description": "Session's start time",
          "type": "time"
        }
      },
      "title": "SessionSchedule",
      "type": "object"
    },
    "TeacherRegistration": {
      "description": "A teacher in the application along with user info",
      "example": {
        "address": "Bandra Complex, Kurla Road",
        "category": "general",
        "city": "Mumbai",
        "designation": "Principal",
        "district": "Mumbai",
        "email": "aman.bahuguna@example.com",
        "full_name": "Aman Bahuguna",
        "gender": "Male",
        "grade": "High School",
        "phone": "8484515848",
        "pincode": "400011",
        "role": "principal",
        "school_id": 2,
        "state": "Maharashtra",
        "stream": "PCB",
        "teacher_id": "AF419"
      },
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "designation": {
          "description": "Designation for the teacher",
          "type": "string"
        },
        "district": {
          "description": "District",
          "type": "string"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "full_name": {
          "description": "Full name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "grade": {
          "description": "Grade level in which a teacher instructs",
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "type": "string"
        },
        "pincode": {
          "description": "Pin code",
          "type": "string"
        },
        "role": {
          "description": "User role",
          "type": "string"
        },
        "school_id": {
          "description": "ID of the school associated with the teacher",
          "type": "integer"
        },
        "state": {
          "description": "State",
          "type": "string"
        },
        "subject": {
          "description": "Subject taught by the teacher",
          "type": "string"
        },
        "teacher_id": {
          "description": "ID of the teacher",
          "type": "string"
        }
      },
      "title": "Teacher Registration",
      "type": "object"
    },
    "Status": {
      "description": "A status in the application",
      "example": {
        "title": "registered"
      },
      "properties": {
        "title": {
          "description": "Title of the status",
          "type": "string"
        }
      },
      "title": "Status",
      "type": "object"
    },
    "Sessions": {
      "description": "All the sessions",
      "items": {
        "$ref": "#/definitions/Session"
      },
      "title": "Sessions",
      "type": "array"
    },
    "StudentRegistration": {
      "description": "A student in the application along with user info",
      "example": {
        "address": "Bandra Complex, Kurla Road",
        "board_stream": "PCM",
        "category": "general",
        "city": "Mumbai",
        "district": "Mumbai",
        "email": "rahul.sharma@example.com",
        "father_name": "Narayan Pandey",
        "father_phone": "8989898989",
        "first_name": "Rahul",
        "gender": "Male",
        "last_name": "Sharma",
        "mother_name": "Lakshmi Pandey",
        "mother_phone": "9998887777",
        "phone": "9998887777",
        "pincode": "400011",
        "role": "student",
        "state": "Maharashtra",
        "stream": "PCB",
        "student_id": "120180101057"
      },
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "board_stream": {
          "description": "Stream or subjects chosen for the board (e.g., PCB, PCM, Commerce, Arts)",
          "type": "string"
        },
        "category": {
          "description": "Category",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "district": {
          "description": "District",
          "type": "string"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "father_name": {
          "description": "Father's name",
          "type": "string"
        },
        "father_phone": {
          "description": "Father's phone number",
          "type": "string"
        },
        "first_name": {
          "description": "First name",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "last_name": {
          "description": "Last name",
          "type": "string"
        },
        "mother_name": {
          "description": "Mother's name",
          "type": "string"
        },
        "mother_phone": {
          "description": "Mother's phone number",
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "type": "string"
        },
        "pincode": {
          "description": "Pin code",
          "type": "string"
        },
        "role": {
          "description": "User role",
          "type": "string"
        },
        "state": {
          "description": "State",
          "type": "string"
        },
        "stream": {
          "description": "Stream",
          "type": "string"
        },
        "student_id": {
          "description": "Id for the student",
          "type": "string"
        }
      },
      "title": "Student Registration",
      "type": "object"
    },
    "Schools": {
      "description": "All schools in the application",
      "items": {
        "$ref": "#/definitions/School"
      },
      "title": "Schools",
      "type": "array"
    },
    "UserProfiles": {
      "description": "All user profiles in the application",
      "items": {
        "$ref": "#/definitions/UserProfile"
      },
      "title": "User Profiles",
      "type": "array"
    },
    "Source": {
      "description": "A source in the application",
      "example": {
        "link": "https://www.youtube.com/watch?v=k01UwiIvo9o",
        "name": "youtube",
        "tag_id": 5
      },
      "properties": {
        "link": {
          "description": "Source Link",
          "type": "text"
        },
        "name": {
          "description": "Source name",
          "type": "string"
        },
        "tag_id": {
          "description": "Tag id associated with the source",
          "type": "integer"
        }
      },
      "title": "Source",
      "type": "object"
    },
    "VerifyStudentRequest": {
      "description": "Request body for verifying a student",
      "example": {
        "student_id": "20190240808",
        "verification_params": {
          "auth_group_id": 2,
          "date_of_birth": "2007-01-09"
        }
      },
      "properties": {
        "student_id": {
          "description": "Student ID",
          "type": "string"
        },
        "verification_params": {
          "$ref": "#/definitions/VerificationParams"
        }
      },
      "required": [
        "student_id",
        "verification_params"
      ],
      "title": "Verify Student Request",
      "type": "object"
    },
    "UserSession": {
      "description": "A mapping between user and sesssion-occurence",
      "example": {
        "data": {
          "substitute-teacher-name": "Ms. Poonam"
        },
        "end_time": "2022-02-02T11:30:00Z",
        "is_user_valid": true,
        "session_occurrence_id": 2,
        "start_time": "2022-02-02T11:00:00Z",
        "user_id": "12213221211"
      },
      "properties": {
        "data": {
          "description": "Additional data for user session",
          "type": "map"
        },
        "end_time": {
          "description": "User session end time",
          "type": "timestamp"
        },
        "is_user_valid": {
          "description": "Signifies whether the user exist or not",
          "type": "boolean"
        },
        "session_occurrence_id": {
          "description": "The id of the session occurrence",
          "type": "integer"
        },
        "start_time": {
          "description": "User session start time",
          "type": "timestamp"
        },
        "user_id": {
          "description": "The id of the user",
          "type": "string"
        }
      },
      "title": "UserSession",
      "type": "object"
    },
    "UserSessions": {
      "description": "All user and session occurence mappings",
      "items": {
        "$ref": "#/definitions/UserSession"
      },
      "title": "UserSessions",
      "type": "array"
    },
    "Student": {
      "description": "A student in the application",
      "example": {
        "board_stream": "PCM",
        "category": "general",
        "family_income": "3LPA-6LPA",
        "father_education_level": "UG",
        "father_name": "Narayan Pandey",
        "father_phone": "8989898989",
        "father_profession": "Unemployed",
        "has_internet_access": "Yes",
        "mother_education_level": "UG",
        "mother_name": "Lakshmi Pandey",
        "mother_phone": "9998887777",
        "mother_profession": "Housewife",
        "physically_handicapped": false,
        "primary_smartphone_owner": "Father",
        "primary_smartphone_owner_profession": "Employed",
        "stream": "PCB",
        "student_id": "120180101057",
        "time_of_device_availability": "2022-10-07",
        "user_id": 1
      },
      "properties": {
        "board_stream": {
          "description": "Stream or subjects chosen for the board (e.g., PCB, PCM, Commerce, Arts)",
          "type": "string"
        },
        "category": {
          "description": "Category",
          "type": "string"
        },
        "family_income": {
          "description": "Annual income of family",
          "type": "string"
        },
        "father_name": {
          "description": "Father's name",
          "type": "string"
        },
        "father_phone": {
          "description": "Father's phone number",
          "type": "string"
        },
        "father_profession": {
          "description": "Father's profession",
          "type": "string"
        },
        "has_internet_access": {
          "description": "If the family has internet access",
          "type": "string"
        },
        "mother_education_level": {
          "description": "Mother's education level",
          "type": "string"
        },
        "mother_name": {
          "description": "Mother's name",
          "type": "string"
        },
        "mother_phone": {
          "description": "Mother's phone number",
          "type": "string"
        },
        "mother_profession": {
          "description": "Mother's profession",
          "type": "String"
        },
        "physically_handicapped": {
          "description": "Physically hadicapped",
          "type": "boolean"
        },
        "primary_smartphone_owner": {
          "description": "Primary smartphone owner",
          "type": "string"
        },
        "primary_smartphone_owner_profession": {
          "description": "Profession of primary smartphone owner",
          "type": "string"
        },
        "stream": {
          "description": "Stream",
          "type": "string"
        },
        "student_id": {
          "description": "Id for the student",
          "type": "string"
        },
        "time_of_device_availability": {
          "description": "Time of device availability for a student",
          "type": "string"
        },
        "user_id": {
          "description": "User ID for the student",
          "type": "integer"
        }
      },
      "title": "Student",
      "type": "object"
    },
    "TeacherProfileSetup": {
      "description": "A teacher's profile with associated user profile being set up",
      "example": {
        "avg_rating": 4.5,
        "current_batch": "Photon",
        "current_grade": "11",
        "current_program": "HaryanaStudents",
        "latest_session_accessed": "LiveClass_10",
        "logged_in_atleast_once": false,
        "program_manager": "John Doe",
        "school": "XYZ High School",
        "teacher_id": "20202"
      },
      "properties": {
        "avg_rating": {
          "description": "Average rating of the teacher",
          "type": "decimal"
        },
        "current_batch": {
          "description": "Current Batch",
          "type": "string"
        },
        "current_grade": {
          "description": "Current Grade",
          "type": "string"
        },
        "current_program": {
          "description": "Current Program",
          "type": "string"
        },
        "latest_session_accessed": {
          "description": "Name of the latest session accessed",
          "type": "string"
        },
        "logged_in_atleast_once": {
          "description": "Has user logged in atleast once?",
          "type": "boolean"
        },
        "program_manager": {
          "description": "Program manager for the teacher",
          "type": "string"
        },
        "school": {
          "description": "School where the teacher works",
          "type": "string"
        },
        "teacher_id": {
          "description": "Teacher ID associated with the teacher's profile",
          "type": "string"
        }
      },
      "title": "TeacherProfile Setup",
      "type": "object"
    },
    "Resources": {
      "description": "All resources in the application",
      "items": {
        "$ref": "#/definitions/Resource"
      },
      "title": "Resources",
      "type": "array"
    },
    "SessionSchedules": {
      "description": "All session schedules in the application",
      "items": {
        "$ref": "#/definitions/SessionSchedule"
      },
      "title": "SessionSchedules",
      "type": "array"
    },
    "Purpose": {
      "description": "A purpose in the application",
      "example": {
        "description": "workbook for the program",
        "name": "learningModule",
        "tag_id": 6
      },
      "properties": {
        "description": {
          "description": "Purpose description",
          "type": "text"
        },
        "name": {
          "description": "Purpose name",
          "type": "string"
        },
        "tag_id": {
          "description": "Tag id associated with the purpose",
          "type": "integer"
        }
      },
      "title": "Purpose",
      "type": "object"
    }
  },
  "paths": {
    "/api/program/{programId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.ProgramController.delete",
        "parameters": [
          {
            "description": "The id of the program record",
            "in": "path",
            "name": "programId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Program"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ProgramController.show",
        "parameters": [
          {
            "description": "The id of the program record",
            "in": "path",
            "name": "programId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Program"
            }
          }
        },
        "summary": "",
        "tags": [
          "Program"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.ProgramController.update",
        "parameters": [
          {
            "description": "The id of the program record",
            "in": "path",
            "name": "programId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Program to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Program"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Program"
            }
          }
        },
        "summary": "",
        "tags": [
          "Program"
        ]
      }
    },
    "/api/group-session/{groupSessionId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.GroupSessionController.delete",
        "parameters": [
          {
            "description": "The id of the group session record",
            "in": "path",
            "name": "groupSessionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "GroupSession"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GroupSessionController.show",
        "parameters": [
          {
            "description": "The id of the group session record",
            "in": "path",
            "name": "groupSessionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupSessions"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupSession"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.GroupSessionController.update",
        "parameters": [
          {
            "description": "The id of the session record",
            "in": "path",
            "name": "groupSessionId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Group session to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupSessions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/GroupSessions"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupSession"
        ]
      }
    },
    "/api/session/{id}": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SessionController.show",
        "parameters": [
          {
            "description": "The id of the session record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        },
        "summary": "",
        "tags": [
          "Session"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.SessionController.update",
        "parameters": [
          {
            "description": "The id of the session record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Session to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        },
        "summary": "",
        "tags": [
          "Session"
        ]
      }
    },
    "/api/session-schedule": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SessionScheduleController.index",
        "parameters": [
          {
            "description": "The id of a session",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionSchedules"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionSchedule"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SessionScheduleController.create",
        "parameters": [
          {
            "description": "Session Schedule to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionSchedule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SessionSchedules"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionSchedule"
        ]
      }
    },
    "/api/user-profile/{id}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.UserProfileController.delete",
        "parameters": [
          {
            "description": "The id of the user profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "UserProfile"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.UserProfileController.show",
        "parameters": [
          {
            "description": "The id of the user profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserProfile"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.UserProfileController.update",
        "parameters": [
          {
            "description": "The id of the user profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User Profile to update to",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserProfile"
        ]
      }
    },
    "/api/user": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.UserController.index",
        "parameters": [
          {
            "description": "The email of the user",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "The full name of the user",
            "in": "query",
            "name": "full_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date of birth of the user",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "type": "date"
          },
          {
            "description": "The phone of the user",
            "in": "query",
            "name": "phone",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        },
        "summary": "",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.UserController.create",
        "parameters": [
          {
            "description": "User to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "summary": "",
        "tags": [
          "User"
        ]
      }
    },
    "/api/purpose/{purposeId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.PurposeController.delete",
        "parameters": [
          {
            "description": "The id of the purpose record",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Purpose"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.PurposeController.show",
        "parameters": [
          {
            "description": "The id of the purpose record",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Purpose"
            }
          }
        },
        "summary": "",
        "tags": [
          "Purpose"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.PurposeController.update",
        "parameters": [
          {
            "description": "The id of the purpose record",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Purpose to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Purpose"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Purpose"
            }
          }
        },
        "summary": "",
        "tags": [
          "Purpose"
        ]
      }
    },
    "/api/status": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StatusController.index",
        "parameters": [
          {
            "description": "The title of status",
            "in": "query",
            "name": "params",
            "required": false,
            "title": "title",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Statuses"
            }
          }
        },
        "summary": "",
        "tags": [
          "Status"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.StatusController.create",
        "parameters": [
          {
            "description": "Status to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "summary": "",
        "tags": [
          "Status"
        ]
      }
    },
    "/api/auth-group/{authGroupId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.AuthGroupController.delete",
        "parameters": [
          {
            "description": "The id of the auth-group record",
            "in": "path",
            "name": "authGroupId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "AuthGroup"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.AuthGroupController.show",
        "parameters": [
          {
            "description": "The id of the auth-group record",
            "in": "path",
            "name": "authGroupId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthGroup"
            }
          }
        },
        "summary": "",
        "tags": [
          "AuthGroup"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.AuthGroupController.update",
        "parameters": [
          {
            "description": "The id of the auth-group record",
            "in": "path",
            "name": "authGroupId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Auth-Group to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/AuthGroup"
            }
          }
        },
        "summary": "",
        "tags": [
          "AuthGroup"
        ]
      }
    },
    "/api/subject/{subjectId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.SubjectController.delete",
        "parameters": [
          {
            "description": "The id of the subject record",
            "in": "path",
            "name": "subjectId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Subject"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SubjectController.show",
        "parameters": [
          {
            "description": "The id of the subject record",
            "in": "path",
            "name": "subjectId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subject"
            }
          }
        },
        "summary": "",
        "tags": [
          "Subject"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.SubjectController.update",
        "parameters": [
          {
            "description": "The id of the subject record",
            "in": "path",
            "name": "subjectId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Subject to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Subject"
            }
          }
        },
        "summary": "",
        "tags": [
          "Subject"
        ]
      }
    },
    "/api/student/{id}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.delete",
        "parameters": [
          {
            "description": "The id of the student record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.show",
        "parameters": [
          {
            "description": "The id of the student record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.update",
        "parameters": [
          {
            "description": "The id of the student record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Student to update along with user",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      }
    },
    "/api/student": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.index",
        "parameters": [
          {
            "description": "The id of the student",
            "in": "query",
            "name": "student_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The stream of the student",
            "in": "query",
            "name": "stream",
            "required": false,
            "type": "string"
          },
          {
            "description": "The father's name of the student",
            "in": "query",
            "name": "father_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Students"
            }
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.create",
        "parameters": [
          {
            "description": "Student to create along with user",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudentWithUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StudentWithUser"
            }
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      }
    },
    "/api/program": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ProgramController.index",
        "parameters": [
          {
            "description": "The name the program",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The type the program",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Programs"
            }
          }
        },
        "summary": "",
        "tags": [
          "Program"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.ProgramController.create",
        "parameters": [
          {
            "description": "Program to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Program"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Program"
            }
          }
        },
        "summary": "",
        "tags": [
          "Program"
        ]
      }
    },
    "/api/curriculum/{curriculumId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.CurriculumController.delete",
        "parameters": [
          {
            "description": "The id of the curriculum record",
            "in": "path",
            "name": "curriculumId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Curriculum"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.CurriculumController.show",
        "parameters": [
          {
            "description": "The id of the curriculum record",
            "in": "path",
            "name": "curriculumId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Curriculum"
            }
          }
        },
        "summary": "",
        "tags": [
          "Curriculum"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.CurriculumController.update",
        "parameters": [
          {
            "description": "The id of the curriculum record",
            "in": "path",
            "name": "curriculumId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Curriculum to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Curriculum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Curriculum"
            }
          }
        },
        "summary": "",
        "tags": [
          "Curriculum"
        ]
      }
    },
    "/api/school": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolController.index",
        "parameters": [
          {
            "description": "The name the school",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The code the school",
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          },
          {
            "description": "The udise code the school",
            "in": "query",
            "name": "udise_code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Schools"
            }
          }
        },
        "summary": "",
        "tags": [
          "School"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolController.create",
        "parameters": [
          {
            "description": "School to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        },
        "summary": "",
        "tags": [
          "School"
        ]
      }
    },
    "/api/teacher-profile": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherProfileController.index",
        "parameters": [
          {
            "description": "The id of the teacher",
            "in": "query",
            "name": "teacher_id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeacherProfiles"
            }
          }
        },
        "summary": "",
        "tags": [
          "TeacherProfile"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherProfileController.create",
        "parameters": [
          {
            "description": "TeacherProfile to setup along with user profile",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeacherProfileSetup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TeacherProfileWithUserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "TeacherProfile"
        ]
      }
    },
    "/api/group/{groupId}/update-sessions": {
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.GroupController.update_sessions",
        "parameters": [
          {
            "description": "The id of the group record",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "List of session ids to update for the group",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionIds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupSessions"
            }
          }
        },
        "summary": "",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/tag/{tagId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.TagController.delete",
        "parameters": [
          {
            "description": "The id of the tag record",
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Tag"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TagController.show",
        "parameters": [
          {
            "description": "The id of the tag record",
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "summary": "",
        "tags": [
          "Tag"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.TagController.update",
        "parameters": [
          {
            "description": "The id of the tag record",
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Tag to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "summary": "",
        "tags": [
          "Tag"
        ]
      }
    },
    "/api/session/{id}/update-groups": {
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SessionController.update_groups",
        "parameters": [
          {
            "description": "The id of the session record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "List of group ids to update for the session",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupIds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        },
        "summary": "",
        "tags": [
          "Session"
        ]
      }
    },
    "/api/session-occurrence": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SessionOccurrenceController.index",
        "parameters": [
          {
            "description": "The id the session",
            "in": "query",
            "name": "session_id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionOccurrences"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionOccurrence"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SessionOccurrenceController.create",
        "parameters": [
          {
            "description": "Session occurence to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionOccurrence"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SessionOccurrence"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionOccurrence"
        ]
      }
    },
    "/api/student/generate-id": {
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.create_student_id",
        "parameters": [
          {
            "description": "Details for generating student ID",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudentIdGeneration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StudentIdGenerationResponse"
            }
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      }
    },
    "/api/school/{schoolId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolController.delete",
        "parameters": [
          {
            "description": "The id of the school record",
            "in": "path",
            "name": "schoolId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "School"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolController.show",
        "parameters": [
          {
            "description": "The id of the school record",
            "in": "path",
            "name": "schoolId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        },
        "summary": "",
        "tags": [
          "School"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolController.update",
        "parameters": [
          {
            "description": "The id of the school record",
            "in": "path",
            "name": "schoolId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "School to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/School"
            }
          }
        },
        "summary": "",
        "tags": [
          "School"
        ]
      }
    },
    "/api/user/{userId}": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.UserController.show",
        "parameters": [
          {
            "description": "The id of the user record",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "summary": "",
        "tags": [
          "User"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.UserController.update",
        "parameters": [
          {
            "description": "The id of the user record",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "summary": "",
        "tags": [
          "User"
        ]
      }
    },
    "/api/chapter": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ChapterController.index",
        "parameters": [
          {
            "description": "The chapter of a subject",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The code of the chapter",
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Chapters"
            }
          }
        },
        "summary": "",
        "tags": [
          "Chapter"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.ChapterController.create",
        "parameters": [
          {
            "description": "Chapter to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Chapter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Chapter"
            }
          }
        },
        "summary": "",
        "tags": [
          "Chapter"
        ]
      }
    },
    "/api/batch/{batchId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.BatchController.delete",
        "parameters": [
          {
            "description": "The id of the batch record",
            "in": "path",
            "name": "batchId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Batch"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.BatchController.show",
        "parameters": [
          {
            "description": "The id of the batch record",
            "in": "path",
            "name": "batchId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Batch"
            }
          }
        },
        "summary": "",
        "tags": [
          "Batch"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.BatchController.update",
        "parameters": [
          {
            "description": "The id of the batch record",
            "in": "path",
            "name": "batchId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Batch to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Batch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Batch"
            }
          }
        },
        "summary": "",
        "tags": [
          "Batch"
        ]
      }
    },
    "/api/source/{sourceId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.SourceController.delete",
        "parameters": [
          {
            "description": "The id of the source record",
            "in": "path",
            "name": "sourceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Source"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SourceController.show",
        "parameters": [
          {
            "description": "The id of the source record",
            "in": "path",
            "name": "sourceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Source"
            }
          }
        },
        "summary": "",
        "tags": [
          "Source"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.SourceController.update",
        "parameters": [
          {
            "description": "The id of the source record",
            "in": "path",
            "name": "sourceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Source to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Source"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Source"
            }
          }
        },
        "summary": "",
        "tags": [
          "Source"
        ]
      }
    },
    "/api/group/{groupId}/update-users": {
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.GroupController.update_users",
        "parameters": [
          {
            "description": "The id of the group record",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "List of user ids to update for the group",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserIds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          }
        },
        "summary": "",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/exam": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ExamController.index",
        "parameters": [
          {
            "description": "The name of the exam",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Exams"
            }
          }
        },
        "summary": "",
        "tags": [
          "Exam"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.ExamController.create",
        "parameters": [
          {
            "description": "Exam to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        },
        "summary": "",
        "tags": [
          "Exam"
        ]
      }
    },
    "/api/concept": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ConceptController.index",
        "parameters": [
          {
            "description": "The concept of a topic",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Concepts"
            }
          }
        },
        "summary": "",
        "tags": [
          "Concept"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.ConceptController.create",
        "parameters": [
          {
            "description": "Concept to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Concept"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Concept"
            }
          }
        },
        "summary": "",
        "tags": [
          "Concept"
        ]
      }
    },
    "/api/grade/{gradeId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.GradeController.delete",
        "parameters": [
          {
            "description": "The id of the grade record",
            "in": "path",
            "name": "gradeId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Grade"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GradeController.show",
        "parameters": [
          {
            "description": "The id of the grade record",
            "in": "path",
            "name": "gradeId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Grade"
            }
          }
        },
        "summary": "",
        "tags": [
          "Grade"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.GradeController.update",
        "parameters": [
          {
            "description": "The id of the grade record",
            "in": "path",
            "name": "gradeId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Grade to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Grade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Grade"
            }
          }
        },
        "summary": "",
        "tags": [
          "Grade"
        ]
      }
    },
    "/api/subject": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SubjectController.index",
        "parameters": [
          {
            "description": "The subject of a grade",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The code of the subject",
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subjects"
            }
          }
        },
        "summary": "",
        "tags": [
          "Subject"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SubjectController.create",
        "parameters": [
          {
            "description": "Subject to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Subject"
            }
          }
        },
        "summary": "",
        "tags": [
          "Subject"
        ]
      }
    },
    "/api/status/{statusId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.StatusController.delete",
        "parameters": [
          {
            "description": "The id of the status record",
            "in": "path",
            "name": "statusId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Status"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StatusController.show",
        "parameters": [
          {
            "description": "The id of the status record",
            "in": "path",
            "name": "statusId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "summary": "",
        "tags": [
          "Status"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.StatusController.update",
        "parameters": [
          {
            "description": "The id of the status record",
            "in": "path",
            "name": "statusId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Status to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "summary": "",
        "tags": [
          "Status"
        ]
      }
    },
    "/api/resource/{resourceId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.ResourceController.delete",
        "parameters": [
          {
            "description": "The id of the resource record",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Resource"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ResourceController.show",
        "parameters": [
          {
            "description": "The id of the resource record",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "summary": "",
        "tags": [
          "Resource"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.ResourceController.update",
        "parameters": [
          {
            "description": "The id of the resource record",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Resource to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "summary": "",
        "tags": [
          "Resource"
        ]
      }
    },
    "/api/purpose": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.PurposeController.index",
        "parameters": [
          {
            "description": "The purpose of the content",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Purposes"
            }
          }
        },
        "summary": "",
        "tags": [
          "Purpose"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.PurposeController.create",
        "parameters": [
          {
            "description": "Purpose to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Purpose"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Purpose"
            }
          }
        },
        "summary": "",
        "tags": [
          "Purpose"
        ]
      }
    },
    "/api/form-schema/{formSchemaId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.FormSchemaController.delete",
        "parameters": [
          {
            "description": "The id of the form schema record",
            "in": "path",
            "name": "formSchemaId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "FormSchema"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.FormSchemaController.show",
        "parameters": [
          {
            "description": "The id of the form schema record",
            "in": "path",
            "name": "formSchemaId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormSchema"
            }
          }
        },
        "summary": "",
        "tags": [
          "FormSchema"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.FormSchemaController.update",
        "parameters": [
          {
            "description": "The id of the form schema record",
            "in": "path",
            "name": "formSchemaId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Form schema to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/FormSchema"
            }
          }
        },
        "summary": "",
        "tags": [
          "FormSchema"
        ]
      }
    },
    "/api/resource": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ResourceController.index",
        "parameters": [
          {
            "description": "The resource of the content",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resources"
            }
          }
        },
        "summary": "",
        "tags": [
          "Resource"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.ResourceController.create",
        "parameters": [
          {
            "description": "Resource to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        },
        "summary": "",
        "tags": [
          "Resource"
        ]
      }
    },
    "/api/session": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SessionController.index",
        "parameters": [
          {
            "description": "The id the session",
            "in": "query",
            "name": "session_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name the session",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The platform id the session",
            "in": "query",
            "name": "platform_id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Sessions"
            }
          }
        },
        "summary": "",
        "tags": [
          "Session"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SessionController.create",
        "parameters": [
          {
            "description": "Session to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        },
        "summary": "",
        "tags": [
          "Session"
        ]
      }
    },
    "/api/student-profile/{id}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.StudentProfileController.delete",
        "parameters": [
          {
            "description": "The id of the student profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "StudentProfile"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StudentProfileController.show",
        "parameters": [
          {
            "description": "The id of the student profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentProfileWithUserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentProfile"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.StudentProfileController.update",
        "parameters": [
          {
            "description": "The id of the student profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Student Profile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudentProfileSetup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/StudentProfileWithUserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentProfile"
        ]
      }
    },
    "/api/group/{groupId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.GroupController.delete",
        "parameters": [
          {
            "description": "The id of the group record",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Group"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GroupController.show",
        "parameters": [
          {
            "description": "The id of the group record",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "summary": "",
        "tags": [
          "Group"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.GroupController.update",
        "parameters": [
          {
            "description": "The id of the group record",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Group to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "summary": "",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/chapter/{chapterId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.ChapterController.delete",
        "parameters": [
          {
            "description": "The id of the chapter record",
            "in": "path",
            "name": "chapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Chapter"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ChapterController.show",
        "parameters": [
          {
            "description": "The id of the chapter record",
            "in": "path",
            "name": "chapterId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Chapter"
            }
          }
        },
        "summary": "",
        "tags": [
          "Chapter"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.ChapterController.update",
        "parameters": [
          {
            "description": "The id of the chapter record",
            "in": "path",
            "name": "chapterId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Chapter to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Chapter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Chapter"
            }
          }
        },
        "summary": "",
        "tags": [
          "Chapter"
        ]
      }
    },
    "/api/form-schema": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.FormSchemaController.index",
        "parameters": [
          {
            "description": "The name of the form schema",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FormSchemas"
            }
          }
        },
        "summary": "",
        "tags": [
          "FormSchema"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.FormSchemaController.create",
        "parameters": [
          {
            "description": "Form Schema to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FormSchema"
            }
          }
        },
        "summary": "",
        "tags": [
          "FormSchema"
        ]
      }
    },
    "/api/student-exam-record": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StudentExamRecordController.index",
        "parameters": [
          {
            "description": "The id of the student",
            "in": "query",
            "name": "student_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The id of the exam",
            "in": "query",
            "name": "exam_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentExamRecords"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentExamRecord"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.StudentExamRecordController.create",
        "parameters": [
          {
            "description": "Student Exam Record to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudentExamRecord"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StudentExamRecord"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentExamRecord"
        ]
      }
    },
    "/api/enrollment-record/{enrollmentRecordId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.EnrollmentRecordController.delete",
        "parameters": [
          {
            "description": "The id of the enrollment record",
            "in": "path",
            "name": "enrollmentRecordId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "EnrollmentRecord"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.EnrollmentRecordController.show",
        "parameters": [
          {
            "description": "The id of the enrollment record",
            "in": "path",
            "name": "enrollmentRecordId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentRecord"
            }
          }
        },
        "summary": "",
        "tags": [
          "EnrollmentRecord"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.EnrollmentRecordController.update",
        "parameters": [
          {
            "description": "The id of the enrollment record",
            "in": "path",
            "name": "enrollmentRecordId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Enrollment record to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnrollmentRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/EnrollmentRecord"
            }
          }
        },
        "summary": "",
        "tags": [
          "EnrollmentRecord"
        ]
      }
    },
    "/api/student/{student_id}/status": {
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.update_student_status",
        "parameters": [
          {
            "description": "The student_id of the student",
            "in": "path",
            "name": "student_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The status to be updated",
            "in": "query",
            "name": "status",
            "required": true,
            "type": "string"
          },
          {
            "description": "The academic year",
            "in": "query",
            "name": "academic_year",
            "required": true,
            "type": "string"
          },
          {
            "description": "The start date for the status",
            "in": "query",
            "name": "start_date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      }
    },
    "/api/learning-objective": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.LearningObjectiveController.index",
        "parameters": [
          {
            "description": "The learning objective of a topic",
            "in": "query",
            "name": "title",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LearningObjectives"
            }
          }
        },
        "summary": "",
        "tags": [
          "LearningObjective"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.LearningObjectiveController.create",
        "parameters": [
          {
            "description": "Learning objective to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LearningObjective"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/LearningObjective"
            }
          }
        },
        "summary": "",
        "tags": [
          "LearningObjective"
        ]
      }
    },
    "/api/group": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GroupController.index",
        "parameters": [
          {
            "description": "The type of group",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "description": "The child id of the group",
            "in": "query",
            "name": "child_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          }
        },
        "summary": "",
        "tags": [
          "Group"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.GroupController.create",
        "parameters": [
          {
            "description": "Group to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "summary": "",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/student-exam-record/{recordId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.StudentExamRecordController.delete",
        "parameters": [
          {
            "description": "The id of the record",
            "in": "path",
            "name": "recordId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "StudentExamRecord"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StudentExamRecordController.show",
        "parameters": [
          {
            "description": "The id of the record",
            "in": "path",
            "name": "recordId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentExamRecord"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentExamRecord"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.StudentExamRecordController.update",
        "parameters": [
          {
            "description": "The id of the record",
            "in": "path",
            "name": "recordId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Record to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudentExamRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/StudentExamRecord"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentExamRecord"
        ]
      }
    },
    "/api/group-user": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GroupUserController.index",
        "parameters": [
          {
            "description": "The id the group type",
            "in": "query",
            "name": "group_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The id the user",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupUser"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.GroupUserController.create",
        "parameters": [
          {
            "description": "Group user to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupUser"
        ]
      }
    },
    "/api/product/{productId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.ProductController.delete",
        "parameters": [
          {
            "description": "The id of the product record",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ProductController.show",
        "parameters": [
          {
            "description": "The id of the product record",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.ProductController.update",
        "parameters": [
          {
            "description": "The id of the product record",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Product to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ]
      }
    },
    "/api/user-session": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.UserSessionController.index",
        "parameters": [
          {
            "description": "The id the user",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSessions"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserSession"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.UserSessionController.create",
        "parameters": [
          {
            "description": "User session to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserSession"
        ]
      }
    },
    "/api/school-batch": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolBatchController.index",
        "parameters": [
          {
            "description": "The id the school",
            "in": "query",
            "name": "school_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The id the batch",
            "in": "query",
            "name": "batch_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SchoolBatches"
            }
          }
        },
        "summary": "",
        "tags": [
          "SchoolBatch"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolBatchController.create",
        "parameters": [
          {
            "description": "school_batch to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchoolBatches"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SchoolBatches"
            }
          }
        },
        "summary": "",
        "tags": [
          "SchoolBatch"
        ]
      }
    },
    "/api/session-schedule/{sessionScheduleId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.SessionScheduleController.delete",
        "parameters": [
          {
            "description": "The id of the session schedule record",
            "in": "path",
            "name": "sessionScheduleId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "SessionSchedule"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SessionScheduleController.show",
        "parameters": [
          {
            "description": "The id of the session schedule record",
            "in": "path",
            "name": "sessionScheduleId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionSchedule"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionSchedule"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.SessionScheduleController.update",
        "parameters": [
          {
            "description": "The id of the session schedule record",
            "in": "path",
            "name": "sessionScheduleId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Session schedule to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/SessionSchedule"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionSchedule"
        ]
      }
    },
    "/api/group-user/{groupUserId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.GroupUserController.delete",
        "parameters": [
          {
            "description": "The id of the group user record",
            "in": "path",
            "name": "groupUserId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "GroupUser"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GroupUserController.show",
        "parameters": [
          {
            "description": "The id of the group user record",
            "in": "path",
            "name": "groupUserId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupUser"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.GroupUserController.update",
        "parameters": [
          {
            "description": "The id of the session user",
            "in": "path",
            "name": "groupUserId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Group user to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupUser"
        ]
      }
    },
    "/api/school-batch/{schoolBatchId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolBatchController.delete",
        "parameters": [
          {
            "description": "The id of the school_batch record",
            "in": "path",
            "name": "schoolBatchId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "SchoolBatch"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolBatchController.show",
        "parameters": [
          {
            "description": "The id of the school_batch record",
            "in": "path",
            "name": "schoolBatchId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SchoolBatches"
            }
          }
        },
        "summary": "",
        "tags": [
          "SchoolBatch"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.SchoolBatchController.update",
        "parameters": [
          {
            "description": "The id of the school_batch",
            "in": "path",
            "name": "schoolBatchId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "school_batch to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchoolBatches"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/SchoolBatches"
            }
          }
        },
        "summary": "",
        "tags": [
          "SchoolBatch"
        ]
      }
    },
    "/api/student-profile": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.StudentProfileController.index",
        "parameters": [
          {
            "description": "The id of the student",
            "in": "query",
            "name": "student_id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentProfiles"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentProfile"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.StudentProfileController.create",
        "parameters": [
          {
            "description": "StudentProfile to setup along with user profile",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudentProfileSetup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StudentProfileWithUserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "StudentProfile"
        ]
      }
    },
    "/api/session-occurrence/{sessionOccurrenceId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.SessionOccurrenceController.delete",
        "parameters": [
          {
            "description": "The id of the session occurence record",
            "in": "path",
            "name": "sessionOccurrenceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "SessionOccurrence"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SessionOccurrenceController.show",
        "parameters": [
          {
            "description": "The id of the session occurence record",
            "in": "path",
            "name": "sessionOccurrenceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionOccurrenceWithUser"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionOccurrence"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.SessionOccurrenceController.update",
        "parameters": [
          {
            "description": "The id of the session occurrence",
            "in": "path",
            "name": "sessionOccurrenceId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Session occurrence to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionOccurrence"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/SessionOccurrence"
            }
          }
        },
        "summary": "",
        "tags": [
          "SessionOccurrence"
        ]
      }
    },
    "/api/user-profile": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.UserProfileController.index",
        "parameters": [
          {
            "description": "The id of the user profile",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The id of the user",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "User logged in at least once",
            "in": "query",
            "name": "logged_in_atleast_once",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserProfiles"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserProfile"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.UserProfileController.create",
        "parameters": [
          {
            "description": "UserProfile to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserProfile"
        ]
      }
    },
    "/api/tag": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TagController.index",
        "parameters": [
          {
            "description": "The name of the tag",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The description of the tag",
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tags"
            }
          }
        },
        "summary": "",
        "tags": [
          "Tag"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.TagController.create",
        "parameters": [
          {
            "description": "Tag to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "summary": "",
        "tags": [
          "Tag"
        ]
      }
    },
    "/api/topic/{topicId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.TopicController.delete",
        "parameters": [
          {
            "description": "The id of the topic record",
            "in": "path",
            "name": "topicId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Topic"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TopicController.show",
        "parameters": [
          {
            "description": "The id of the topic record",
            "in": "path",
            "name": "topicId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        },
        "summary": "",
        "tags": [
          "Topic"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.TopicController.update",
        "parameters": [
          {
            "description": "The id of the topic record",
            "in": "path",
            "name": "topicId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Topic to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        },
        "summary": "",
        "tags": [
          "Topic"
        ]
      }
    },
    "/api/teacher-profile/{id}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherProfileController.delete",
        "parameters": [
          {
            "description": "The id of the teacher profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "TeacherProfile"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherProfileController.show",
        "parameters": [
          {
            "description": "The id of the teacher profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeacherProfileWithUserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "TeacherProfile"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherProfileController.update",
        "parameters": [
          {
            "description": "The id of the teacher profile record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Teacher Profile to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeacherProfileSetup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/TeacherProfileWithUserProfile"
            }
          }
        },
        "summary": "",
        "tags": [
          "TeacherProfile"
        ]
      }
    },
    "/api/auth-group": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.AuthGroupController.index",
        "parameters": [
          {
            "description": "The name of the auth-group",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The locale of the auth-group",
            "in": "query",
            "name": "locale",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthGroups"
            }
          }
        },
        "summary": "",
        "tags": [
          "AuthGroup"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.AuthGroupController.create",
        "parameters": [
          {
            "description": "AuthGroup to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AuthGroup"
            }
          }
        },
        "summary": "",
        "tags": [
          "AuthGroup"
        ]
      }
    },
    "/api/exam/{examId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.ExamController.delete",
        "parameters": [
          {
            "description": "The id of the exam",
            "in": "path",
            "name": "examId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Exam"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ExamController.show",
        "parameters": [
          {
            "description": "The id of the exam",
            "in": "path",
            "name": "examId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        },
        "summary": "",
        "tags": [
          "Exam"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.ExamController.update",
        "parameters": [
          {
            "description": "The id of the exam",
            "in": "path",
            "name": "examId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Exam to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        },
        "summary": "",
        "tags": [
          "Exam"
        ]
      }
    },
    "/api/batch": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.BatchController.index",
        "parameters": [
          {
            "description": "The name the batch",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The contact hours per week of the batch",
            "in": "query",
            "name": "contact_hours_per_week",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Batches"
            }
          }
        },
        "summary": "",
        "tags": [
          "Batch"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.BatchController.create",
        "parameters": [
          {
            "description": "Batch to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Batch"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Batch"
            }
          }
        },
        "summary": "",
        "tags": [
          "Batch"
        ]
      }
    },
    "/api/concept/{conceptId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.ConceptController.delete",
        "parameters": [
          {
            "description": "The id of the concept record",
            "in": "path",
            "name": "conceptId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Concept"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ConceptController.show",
        "parameters": [
          {
            "description": "The id of the concept record",
            "in": "path",
            "name": "conceptId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Concept"
            }
          }
        },
        "summary": "",
        "tags": [
          "Concept"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.ConceptController.update",
        "parameters": [
          {
            "description": "The id of the concept record",
            "in": "path",
            "name": "conceptId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Concept to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Concept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Concept"
            }
          }
        },
        "summary": "",
        "tags": [
          "Concept"
        ]
      }
    },
    "/api/student/verify-student": {
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.StudentController.verify_student",
        "parameters": [
          {
            "description": "Parameters needed to verify student",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyStudentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerificationResult"
            }
          }
        },
        "summary": "",
        "tags": [
          "Student"
        ]
      }
    },
    "/api/learning-objective/{learningObjectiveId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.LearningObjectiveController.delete",
        "parameters": [
          {
            "description": "The id of the learning objective",
            "in": "path",
            "name": "learningObjectiveId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "LearningObjective"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.LearningObjectiveController.show",
        "parameters": [
          {
            "description": "The id of the learning_objective record",
            "in": "path",
            "name": "learningObjectiveId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LearningObjective"
            }
          }
        },
        "summary": "",
        "tags": [
          "LearningObjective"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.LearningObjectiveController.update",
        "parameters": [
          {
            "description": "The id of the learning objective record",
            "in": "path",
            "name": "learningObjectiveId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "LearningObjective to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LearningObjective"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/LearningObjective"
            }
          }
        },
        "summary": "",
        "tags": [
          "LearningObjective"
        ]
      }
    },
    "/api/teacher/{id}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherController.delete",
        "parameters": [
          {
            "description": "The id of the teacher record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "Teacher"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherController.show",
        "parameters": [
          {
            "description": "The id of the teacher record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        },
        "summary": "",
        "tags": [
          "Teacher"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherController.update",
        "parameters": [
          {
            "description": "The id of the teacher record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Teacher to update along with user",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        },
        "summary": "",
        "tags": [
          "Teacher"
        ]
      }
    },
    "/api/curriculum": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.CurriculumController.index",
        "parameters": [
          {
            "description": "The name of the curriculum",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The code of the curriculum",
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Curriculums"
            }
          }
        },
        "summary": "",
        "tags": [
          "Curriculum"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.CurriculumController.create",
        "parameters": [
          {
            "description": "Curriculum to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Curriculum"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Curriculum"
            }
          }
        },
        "summary": "",
        "tags": [
          "Curriculum"
        ]
      }
    },
    "/api/user-session/{userSessionId}": {
      "delete": {
        "description": "",
        "operationId": "DbserviceWeb.UserSessionController.delete",
        "parameters": [
          {
            "description": "The id of the user session record",
            "in": "path",
            "name": "userSessionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "",
        "tags": [
          "UserSession"
        ]
      },
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.UserSessionController.show",
        "parameters": [
          {
            "description": "The id of the user session record",
            "in": "path",
            "name": "userSessionId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserSession"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "DbserviceWeb.UserSessionController.update",
        "parameters": [
          {
            "description": "The id of the session record",
            "in": "path",
            "name": "userSessionId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User session to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/UserSession"
            }
          }
        },
        "summary": "",
        "tags": [
          "UserSession"
        ]
      }
    },
    "/api/enrollment-record": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.EnrollmentRecordController.index",
        "parameters": [
          {
            "description": "The academic year of the student's enrollment",
            "in": "query",
            "name": "academic_year",
            "required": false,
            "type": "string"
          },
          {
            "description": "The grade of the student's enrollment",
            "in": "query",
            "name": "grade",
            "required": false,
            "type": "string"
          },
          {
            "description": "The board medium of the student's enrollment",
            "in": "query",
            "name": "board_medium",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollmentRecords"
            }
          }
        },
        "summary": "",
        "tags": [
          "EnrollmentRecord"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.EnrollmentRecordController.create",
        "parameters": [
          {
            "description": "Enrollment record to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnrollmentRecord"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnrollmentRecord"
            }
          }
        },
        "summary": "",
        "tags": [
          "EnrollmentRecord"
        ]
      }
    },
    "/api/grade": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GradeController.index",
        "parameters": [
          {
            "description": "The grade in school",
            "in": "query",
            "name": "number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Grades"
            }
          }
        },
        "summary": "",
        "tags": [
          "Grade"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.GradeController.create",
        "parameters": [
          {
            "description": "Grade to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Grade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Grade"
            }
          }
        },
        "summary": "",
        "tags": [
          "Grade"
        ]
      }
    },
    "/api/group-session/session-auth-group": {
      "get": {
        "description": "Fetches the associated auth group data for a session",
        "operationId": "DbserviceWeb.GroupSessionController.get_auth_group_from_session",
        "parameters": [
          {
            "description": "The ID of the session",
            "in": "query",
            "name": "session_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthGroup"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupSession"
        ]
      }
    },
    "/api/teacher": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherController.index",
        "parameters": [
          {
            "description": "The ID the teacher",
            "in": "query",
            "name": "teacher_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "The designation the teacher",
            "in": "query",
            "name": "designation",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teachers"
            }
          }
        },
        "summary": "",
        "tags": [
          "Teacher"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.TeacherController.create",
        "parameters": [
          {
            "description": "Teacher to create along with user",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeacherWithUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TeacherWithUser"
            }
          }
        },
        "summary": "",
        "tags": [
          "Teacher"
        ]
      }
    },
    "/api/source": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.SourceController.index",
        "parameters": [
          {
            "description": "The source of the content",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The link of the source",
            "in": "query",
            "name": "link",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Sources"
            }
          }
        },
        "summary": "",
        "tags": [
          "Source"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.SourceController.create",
        "parameters": [
          {
            "description": "Source to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Source"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Source"
            }
          }
        },
        "summary": "",
        "tags": [
          "Source"
        ]
      }
    },
    "/api/product": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.ProductController.index",
        "parameters": [
          {
            "description": "The name the product",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.ProductController.create",
        "parameters": [
          {
            "description": "Product to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "summary": "",
        "tags": [
          "Product"
        ]
      }
    },
    "/api/topic": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.TopicController.index",
        "parameters": [
          {
            "description": "The topic of a chapter",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The code of the topic",
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Topics"
            }
          }
        },
        "summary": "",
        "tags": [
          "Topic"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.TopicController.create",
        "parameters": [
          {
            "description": "Topic to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        },
        "summary": "",
        "tags": [
          "Topic"
        ]
      }
    },
    "/api/group-session": {
      "get": {
        "description": "",
        "operationId": "DbserviceWeb.GroupSessionController.index",
        "parameters": [
          {
            "description": "The id the group",
            "in": "query",
            "name": "group_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The id the session",
            "in": "query",
            "name": "session_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupSessions"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupSession"
        ]
      },
      "post": {
        "description": "",
        "operationId": "DbserviceWeb.GroupSessionController.create",
        "parameters": [
          {
            "description": "Group session to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupSessions"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GroupSessions"
            }
          }
        },
        "summary": "",
        "tags": [
          "GroupSession"
        ]
      }
    }
  },
  "swagger": "2.0"
}